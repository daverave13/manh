create or replace PROCEDURE XXNBL_WHSE_UPDATE (
            P_OLD_WHSE    VARCHAR2
            , P_NEW_WHSE  VARCHAR2)
AS
  
  V_OLD_FACILITY_ID NUMBER;
  V_OLD_ALIAS VARCHAR2(5);
  V_NEW_FACILITY_ID NUMBER;

BEGIN
  
  SELECT WHSE_MASTER_ID
  INTO V_OLD_FACILITY_ID
  FROM WHSE_MASTER
  WHERE WHSE = P_OLD_WHSE;
  
  SELECT WHSE_MASTER_ID 
  INTO V_NEW_FACILITY_ID
  FROM WHSE_MASTER
  WHERE WHSE = P_NEW_WHSE;
  
  SELECT FACILITY_ALIAS_ID
  INTO V_OLD_ALIAS
  FROM FACILITY_ALIAS
  WHERE FACILITY_ID = V_OLD_FACILITY_ID;

  DISABLE_FKS;

  FOR X IN (SELECT 'UPDATE ' || TABLE_NAME || ' SET ' || COLUMN_NAME || ' = ''' 
    || P_NEW_WHSE 
    || ''' WHERE ' || COLUMN_NAME ||  ' = ''' || P_OLD_WHSE || '''' SQL_STMT
    FROM ALL_TAB_COLUMNS
    WHERE COLUMN_NAME LIKE '%WHSE%'
    AND TABLE_NAME NOT IN (SELECT VIEW_NAME FROM ALL_VIEWS)
	AND TABLE_NAME IN (SELECT TABLE_NAME FROM ALL_TABLES WHERE NUM_ROWS > 0)
    AND DATA_TYPE NOT IN ('NUMBER','DATE','TIMESTAMP')
    AND TABLE_NAME NOT IN ('WHSE_MASTER','FACILITY','FACILITY_ALIAS','E_DEPT','E_ACT','E_SHIFT','E_JOB_FUNCTION','E_TEAMS'
      ,'E_FORECAST_TEMPLATE','E_FORECAST_RESULT_HDR','E_EMP_DTL')
    AND TABLE_NAME NOT LIKE '%XXNBL%'
    ORDER BY TABLE_NAME
    )

  LOOP
    DBMS_OUTPUT.PUT_LINE(X.SQL_STMT);
    EXECUTE IMMEDIATE X.SQL_STMT;
  END LOOP;

    
  FOR X IN (SELECT 'UPDATE ' || TABLE_NAME || ' SET ' || COLUMN_NAME || ' = ''' 
    || V_NEW_FACILITY_ID 
    || ''' WHERE ' || COLUMN_NAME ||  ' = ''' || V_OLD_FACILITY_ID || '''' SQL_STMT
    FROM ALL_TAB_COLUMNS
    WHERE COLUMN_NAME LIKE '%FACILITY_ID%'
    AND TABLE_NAME NOT IN (SELECT VIEW_NAME FROM ALL_VIEWS)
	AND TABLE_NAME IN (SELECT TABLE_NAME FROM ALL_TABLES WHERE NUM_ROWS > 0)
    AND DATA_TYPE NOT IN ('NUMBER','DATE','TIMESTAMP')
    AND TABLE_NAME NOT IN ('WHSE_MASTER','FACILITY','FACILITY_ALIAS','E_DEPT','E_ACT','E_SHIFT','E_JOB_FUNCTION','E_TEAMS'
      ,'E_FORECAST_TEMPLATE','E_FORECAST_RESULT_HDR','E_EMP_DTL')
    AND TABLE_NAME NOT LIKE '%XXNBL%'
    ORDER BY TABLE_NAME
    )

  LOOP
    DBMS_OUTPUT.PUT_LINE(X.SQL_STMT);
    EXECUTE IMMEDIATE X.SQL_STMT;
  END LOOP;
  UPDATE USER_DEFAULT
  SET PARAMETER_VALUE = (SELECT REGION_ID FROM REGION WHERE REGION_NAME = P_NEW_WHSE)
  WHERE PARAMETER_NAME = 'USER_DEFAULT_REGION_ID';

      
  UPDATE UCL_USER SET USER_NAME = P_NEW_WHSE || 'CONFIG'
	WHERE USER_NAME = P_OLD_WHSE || 'CONFIG';
	
  UPDATE ACCESS_CONTROL
	SET GEO_REGION_ID = (SELECT REGION_ID FROM REGION WHERE REGION_NAME = P_NEW_WHSE);

	
END;
  --adding a comment 02:04:44 12.26.2018
  --and another 02:20:46 12.26.2018